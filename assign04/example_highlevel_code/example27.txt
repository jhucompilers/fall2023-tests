/* variable 'i' allocated vreg 10 */
/* variable 'j' allocated vreg 11 */
/* variable 'n' allocated vreg 12 */
/* variable 'm' allocated 400 bytes of storage at offset 0 */
/* Function 'main' uses 400 bytes of memory and 13 virtual registers */
	.section .text

	.globl main
main:
	enter    $400
	mov_l    vr0, $0
	mov_l    vr10, vr0
	jmp      .L1
.L0:
	mov_l    vr13, $0
	mov_l    vr12, vr13
	mov_l    vr14, $0
	mov_l    vr11, vr14
	jmp      .L3
.L2:
	localaddr vr13, $0
	sconv_lq vr14, vr10
	mul_q    vr15, vr14, $40
	add_q    vr16, vr13, vr15
	sconv_lq vr17, vr11
	mul_q    vr18, vr17, $4
	add_q    vr19, vr16, vr18
	mov_l    (vr19), vr12
	add_l    vr13, vr12, vr10
	mov_l    vr12, vr13
	mov_l    vr14, $1
	add_l    vr15, vr11, vr14
	mov_l    vr11, vr15
.L3:
	mov_l    vr16, $9
	cmplte_l vr17, vr11, vr16
	cjmp_t   vr17, .L2
	mov_l    vr18, $1
	add_l    vr19, vr10, vr18
	mov_l    vr10, vr19
.L1:
	mov_l    vr20, $9
	cmplte_l vr21, vr10, vr20
	cjmp_t   vr21, .L0
	mov_l    vr22, $0
	mov_l    vr10, vr22
	jmp      .L5
.L4:
	mov_l    vr23, $0
	mov_l    vr11, vr23
	jmp      .L7
.L6:
	localaddr vr13, $0
	sconv_lq vr14, vr10
	mul_q    vr15, vr14, $40
	add_q    vr16, vr13, vr15
	sconv_lq vr17, vr11
	mul_q    vr18, vr17, $4
	add_q    vr19, vr16, vr18
	mov_l    vr1, (vr19)
	call     print_i32
	call     print_space
	mov_l    vr13, $1
	add_l    vr14, vr11, vr13
	mov_l    vr11, vr14
.L7:
	mov_l    vr15, $9
	cmplte_l vr16, vr11, vr15
	cjmp_t   vr16, .L6
	call     print_nl
	mov_l    vr13, $1
	add_l    vr14, vr10, vr13
	mov_l    vr10, vr14
.L5:
	mov_l    vr15, $9
	cmplte_l vr16, vr10, vr15
	cjmp_t   vr16, .L4
	mov_l    vr13, $0
	mov_l    vr0, vr13
	jmp      .Lmain_return
.Lmain_return:
	leave    $400
	ret      
