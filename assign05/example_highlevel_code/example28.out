/* variable 'arr' allocated vreg 10 */
/* variable 'i' allocated vreg 11 */
/* Function 'read_m10x10' uses 0 bytes of memory and 12 virtual registers */
/* variable 'a' allocated 800 bytes of storage at offset 0 */
/* variable 'b' allocated 800 bytes of storage at offset 800 */
/* variable 'c' allocated 800 bytes of storage at offset 1600 */
/* variable 'M' allocated vreg 10 */
/* variable 'i' allocated vreg 11 */
/* variable 'j' allocated vreg 12 */
/* variable 'k' allocated vreg 13 */
/* variable 'r' allocated vreg 14 */
/* variable 'val' allocated vreg 15 */
/* Function 'main' uses 2400 bytes of memory and 16 virtual registers */
	.section .text

	.globl read_m10x10
read_m10x10:
	enter    $0
	mov_q    vr10, vr1
	mov_l    vr12, $0
	mov_l    vr11, vr12
	jmp      .L1
.L0:
	call     read_i64
	mov_q    vr12, vr0
	sconv_lq vr13, vr11
	mul_q    vr14, vr13, $8
	add_q    vr15, vr10, vr14
	mov_q    (vr15), vr12
	mov_l    vr16, $1
	add_l    vr17, vr11, vr16
	mov_l    vr11, vr17
.L1:
	mov_l    vr18, $100
	cmplt_l  vr19, vr11, vr18
	cjmp_t   vr19, .L0
	jmp      .Lread_m10x10_return
.Lread_m10x10_return:
	leave    $0
	ret      

	.globl main
main:
	enter    $2400
	mov_l    vr16, $10
	mov_l    vr10, vr16
	localaddr vr17, $0
	mov_q    vr1, vr17
	call     read_m10x10
	localaddr vr18, $800
	mov_q    vr1, vr18
	call     read_m10x10
	mov_l    vr19, $0
	mov_l    vr11, vr19
	jmp      .L3
.L2:
	mov_q    vr16, $0
	localaddr vr17, $1600
	sconv_lq vr18, vr11
	mul_q    vr19, vr18, $8
	add_q    vr20, vr17, vr19
	mov_q    (vr20), vr16
	mov_l    vr21, $1
	add_l    vr22, vr11, vr21
	mov_l    vr11, vr22
.L3:
	mov_l    vr23, $100
	cmplt_l  vr24, vr11, vr23
	cjmp_t   vr24, .L2
	mov_l    vr25, $0
	mov_l    vr13, vr25
	jmp      .L5
.L4:
	mov_l    vr16, $0
	mov_l    vr11, vr16
	jmp      .L7
.L6:
	localaddr vr16, $0
	mul_l    vr17, vr11, vr10
	add_l    vr18, vr17, vr13
	sconv_lq vr19, vr18
	mul_q    vr20, vr19, $8
	add_q    vr21, vr16, vr20
	mov_q    vr22, (vr21)
	mov_q    vr14, vr22
	mov_l    vr23, $0
	mov_l    vr12, vr23
	jmp      .L9
.L8:
	localaddr vr16, $1600
	mul_l    vr17, vr11, vr10
	add_l    vr18, vr17, vr12
	sconv_lq vr19, vr18
	mul_q    vr20, vr19, $8
	add_q    vr21, vr16, vr20
	mov_q    vr22, (vr21)
	mov_q    vr15, vr22
	localaddr vr23, $800
	mul_l    vr24, vr13, vr10
	add_l    vr25, vr24, vr12
	sconv_lq vr26, vr25
	mul_q    vr27, vr26, $8
	add_q    vr28, vr23, vr27
	mov_q    vr30, (vr28)
	mul_q    vr29, vr14, vr30
	add_q    vr31, vr15, vr29
	mov_q    vr15, vr31
	localaddr vr32, $1600
	mul_l    vr33, vr11, vr10
	add_l    vr34, vr33, vr12
	sconv_lq vr35, vr34
	mul_q    vr36, vr35, $8
	add_q    vr37, vr32, vr36
	mov_q    (vr37), vr15
	mov_l    vr38, $1
	add_l    vr39, vr12, vr38
	mov_l    vr12, vr39
.L9:
	cmplt_l  vr40, vr12, vr10
	cjmp_t   vr40, .L8
	mov_l    vr41, $1
	add_l    vr42, vr11, vr41
	mov_l    vr11, vr42
.L7:
	cmplt_l  vr43, vr11, vr10
	cjmp_t   vr43, .L6
	mov_l    vr44, $1
	add_l    vr45, vr13, vr44
	mov_l    vr13, vr45
.L5:
	cmplt_l  vr46, vr13, vr10
	cjmp_t   vr46, .L4
	mov_l    vr47, $0
	mov_l    vr11, vr47
	jmp      .L11
.L10:
	localaddr vr16, $1600
	sconv_lq vr17, vr11
	mul_q    vr18, vr17, $8
	add_q    vr19, vr16, vr18
	mov_q    vr1, (vr19)
	call     print_i64
	call     print_nl
	mov_l    vr20, $1
	add_l    vr21, vr11, vr20
	mov_l    vr11, vr21
.L11:
	mov_l    vr22, $100
	cmplt_l  vr23, vr11, vr22
	cjmp_t   vr23, .L10
	mov_l    vr24, $0
	mov_l    vr0, vr24
	jmp      .Lmain_return
	jmp      .Lmain_return
.Lmain_return:
	leave    $2400
	ret      
