/* variable 'arr' allocated vreg 10 */
/* variable 'i' allocated vreg 11 */
/* variable 'j' allocated vreg 12 */
/* variable 'tmp' allocated vreg 13 */
/* Function 'swap' uses 0 bytes of memory and 14 virtual registers */
/* variable 'arr' allocated vreg 10 */
/* variable 'n' allocated vreg 11 */
/* variable 'i' allocated vreg 12 */
/* variable 'tmp' allocated vreg 13 */
/* Function 'bubble' uses 0 bytes of memory and 14 virtual registers */
/* variable 'a' allocated 20 bytes of storage at offset 0 */
/* variable 'i' allocated vreg 10 */
/* Function 'main' uses 20 bytes of memory and 11 virtual registers */
	.section .text

	.globl swap
swap:
	enter    $0
	mov_q    vr10, vr1
	mov_l    vr11, vr2
	mov_l    vr12, vr3
	sconv_lq vr14, vr11
	mul_q    vr15, vr14, $4
	add_q    vr16, vr10, vr15
	mov_l    vr17, (vr16)
	mov_l    vr13, vr17
	sconv_lq vr18, vr12
	mul_q    vr19, vr18, $4
	add_q    vr20, vr10, vr19
	sconv_lq vr21, vr11
	mul_q    vr22, vr21, $4
	add_q    vr23, vr10, vr22
	mov_l    vr24, (vr20)
	mov_l    (vr23), vr24
	sconv_lq vr25, vr12
	mul_q    vr26, vr25, $4
	add_q    vr27, vr10, vr26
	mov_l    (vr27), vr13
	jmp      .Lswap_return
.Lswap_return:
	leave    $0
	ret      

	.globl bubble
bubble:
	enter    $0
	mov_q    vr10, vr1
	mov_l    vr11, vr2
	mov_l    vr14, $1
	mov_l    vr12, vr14
	jmp      .L1
.L0:
	sconv_lq vr14, vr12
	mul_q    vr15, vr14, $4
	add_q    vr16, vr10, vr15
	mov_l    vr17, $1
	sub_l    vr18, vr12, vr17
	sconv_lq vr19, vr18
	mul_q    vr20, vr19, $4
	add_q    vr21, vr10, vr20
	mov_l    vr23, (vr16)
	mov_l    vr24, (vr21)
	cmplt_l  vr22, vr23, vr24
	cjmp_f   vr22, .L2
	mov_q    vr1, vr10
	mov_l    vr14, $1
	sub_l    vr15, vr12, vr14
	mov_l    vr2, vr15
	mov_l    vr3, vr12
	call     swap
.L2:
	mov_l    vr16, $1
	add_l    vr17, vr12, vr16
	mov_l    vr12, vr17
.L1:
	cmplt_l  vr18, vr12, vr11
	cjmp_t   vr18, .L0
	jmp      .Lbubble_return
.Lbubble_return:
	leave    $0
	ret      

	.globl main
main:
	enter    $20
	mov_l    vr11, $52
	localaddr vr12, $0
	mov_l    vr13, $0
	sconv_lq vr14, vr13
	mul_q    vr15, vr14, $4
	add_q    vr16, vr12, vr15
	mov_l    (vr16), vr11
	mov_l    vr17, $31
	localaddr vr18, $0
	mov_l    vr19, $1
	sconv_lq vr20, vr19
	mul_q    vr21, vr20, $4
	add_q    vr22, vr18, vr21
	mov_l    (vr22), vr17
	mov_l    vr23, $8
	localaddr vr24, $0
	mov_l    vr25, $2
	sconv_lq vr26, vr25
	mul_q    vr27, vr26, $4
	add_q    vr28, vr24, vr27
	mov_l    (vr28), vr23
	mov_l    vr29, $41
	localaddr vr30, $0
	mov_l    vr31, $3
	sconv_lq vr32, vr31
	mul_q    vr33, vr32, $4
	add_q    vr34, vr30, vr33
	mov_l    (vr34), vr29
	mov_l    vr35, $75
	localaddr vr36, $0
	mov_l    vr37, $4
	sconv_lq vr38, vr37
	mul_q    vr39, vr38, $4
	add_q    vr40, vr36, vr39
	mov_l    (vr40), vr35
	localaddr vr41, $0
	mov_q    vr1, vr41
	mov_l    vr42, $5
	mov_l    vr2, vr42
	call     bubble
	mov_l    vr43, $0
	mov_l    vr10, vr43
	jmp      .L4
.L3:
	localaddr vr11, $0
	sconv_lq vr12, vr10
	mul_q    vr13, vr12, $4
	add_q    vr14, vr11, vr13
	mov_l    vr1, (vr14)
	call     print_i32
	call     print_nl
	mov_l    vr15, $1
	add_l    vr16, vr10, vr15
	mov_l    vr10, vr16
.L4:
	mov_l    vr17, $5
	cmplt_l  vr18, vr10, vr17
	cjmp_t   vr18, .L3
	mov_l    vr19, $0
	mov_l    vr0, vr19
	jmp      .Lmain_return
	jmp      .Lmain_return
.Lmain_return:
	leave    $20
	ret      
