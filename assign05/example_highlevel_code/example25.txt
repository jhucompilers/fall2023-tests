/* variable 'points' allocated 24 bytes of storage at offset 0 */
/* variable 'i' allocated vreg 10 */
/* variable 'count' allocated vreg 11 */
/* Function 'main' uses 24 bytes of memory and 12 virtual registers */
	.section .text

	.globl main
main:
	enter    $24
	mov_l    vr12, $11
	mov_l    vr11, vr12
	mov_l    vr13, $0
	mov_l    vr10, vr13
	jmp      .L1
.L0:
	localaddr vr12, $0
	sconv_lq vr13, vr10
	mul_q    vr14, vr13, $8
	add_q    vr15, vr12, vr14
	mov_q    vr16, $0
	add_q    vr17, vr15, vr16
	mov_l    (vr17), vr11
	mov_l    vr12, $1
	add_l    vr13, vr11, vr12
	mov_l    vr11, vr13
	localaddr vr12, $0
	sconv_lq vr13, vr10
	mul_q    vr14, vr13, $8
	add_q    vr15, vr12, vr14
	mov_q    vr16, $4
	add_q    vr17, vr15, vr16
	mov_l    (vr17), vr11
	mov_l    vr12, $1
	add_l    vr13, vr11, vr12
	mov_l    vr11, vr13
	mov_l    vr14, $1
	add_l    vr15, vr10, vr14
	mov_l    vr10, vr15
.L1:
	mov_l    vr16, $3
	cmplt_l  vr17, vr10, vr16
	cjmp_t   vr17, .L0
	mov_l    vr18, $2
	mov_l    vr10, vr18
	jmp      .L3
.L2:
	localaddr vr12, $0
	sconv_lq vr13, vr10
	mul_q    vr14, vr13, $8
	add_q    vr15, vr12, vr14
	mov_q    vr16, $0
	add_q    vr17, vr15, vr16
	mov_l    vr1, (vr17)
	call     print_i32
	call     print_nl
	localaddr vr12, $0
	sconv_lq vr13, vr10
	mul_q    vr14, vr13, $8
	add_q    vr15, vr12, vr14
	mov_q    vr16, $4
	add_q    vr17, vr15, vr16
	mov_l    vr1, (vr17)
	call     print_i32
	call     print_nl
	mov_l    vr12, $1
	sub_l    vr13, vr10, vr12
	mov_l    vr10, vr13
.L3:
	mov_l    vr14, $0
	cmpgte_l vr15, vr10, vr14
	cjmp_t   vr15, .L2
	mov_l    vr12, $0
	mov_l    vr0, vr12
	jmp      .Lmain_return
.Lmain_return:
	leave    $24
	ret      
