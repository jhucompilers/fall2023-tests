/* variable 'arr' allocated vreg 10 */
/* variable 'i' allocated vreg 11 */
/* Function 'read_m500x500' uses 0 bytes of memory and 12 virtual registers */
/* variable 'a' allocated 2000000 bytes of storage at offset 0 */
/* variable 'b' allocated 2000000 bytes of storage at offset 2000000 */
/* variable 'c' allocated 2000000 bytes of storage at offset 4000000 */
/* variable 'M' allocated vreg 10 */
/* variable 'i' allocated vreg 11 */
/* variable 'j' allocated vreg 12 */
/* variable 'k' allocated vreg 13 */
/* variable 'r' allocated vreg 14 */
/* variable 'val' allocated vreg 15 */
/* Function 'main' uses 6000000 bytes of memory and 16 virtual registers */
/* allocate machine register %rbx to variable 'i' (vr11), rank is 81 */
/* allocate machine register %r12 to variable 'arr' (vr10), rank is 20 */
	.section .text

	.globl read_m500x500
read_m500x500:
	enter    $0
	mov_q    vr10, vr1
	mov_l    vr11, $0
	jmp      .L1
.L0:
	call     read_i64
	sconv_lq vr13<%r9>, vr11
	mul_q    vr14<%r8>, vr13<%r9>, $8
	add_q    vr15<%rcx>, vr10, vr14<%r8>
	mov_q    (vr15<%rcx>), vr0
	add_l    vr17<%edx>, vr11, $1
	mov_l    vr11, vr17<%edx>
.L1:
	cmplt_l  vr19<%r9d>, vr11, $250000
	cjmp_t   vr19<%r9d>, .L0
	jmp      .Lread_m500x500_return
.Lread_m500x500_return:
	leave    $0
	ret      
/* allocate machine register %rbx to variable 'j' (vr12), rank is 51640 */
/* allocate machine register %r12 to variable 'val' (vr15), rank is 32000 */
/* allocate machine register %r13 to variable 'i' (vr11), rank is 18542 */
/* allocate machine register %r14 to variable 'M' (vr10), rank is 9261 */
/* allocate machine register %r15 to variable 'k' (vr13), rank is 8461 */

	.globl main
main:
	enter    $6000000
	mov_l    vr10, $500
	localaddr vr17<%r9>, $0
	add_q    vr21<%r8>, vr17<%r9>, $0
	add_q    vr25<%rcx>, vr21<%r8>, $0
	mov_q    vr1, vr25<%rcx>
	call     read_m500x500
	localaddr vr26<%r9>, $2000000
	add_q    vr30<%r8>, vr26<%r9>, $0
	add_q    vr34<%rcx>, vr30<%r8>, $0
	mov_q    vr1, vr34<%rcx>
	call     read_m500x500
	mov_l    vr11, $0
	jmp      .L3
.L2:
	mov_l    vr12, $0
	jmp      .L5
.L4:
	localaddr vr17<%r9>, $4000000
	sconv_lq vr18<%r8>, vr11
	mul_q    vr19<%rcx>, vr18<%r8>, $4000
	add_q    vr20<%rdx>, vr17<%r9>, vr19<%rcx>
	sconv_lq vr21<%rsi>, vr12
	mul_q    vr22<%r8>, vr21<%rsi>, $8
	add_q    vr23<%r9>, vr20<%rdx>, vr22<%r8>
	mov_q    (vr23<%r9>), $0
	add_l    vr25<%ecx>, vr12, $1
	mov_l    vr12, vr25<%ecx>
.L5:
	cmplt_l  vr26<%r9d>, vr12, vr10
	cjmp_t   vr26<%r9d>, .L4
	add_l    vr28<%r9d>, vr11, $1
	mov_l    vr11, vr28<%r9d>
.L3:
	cmplt_l  vr29<%r9d>, vr11, vr10
	cjmp_t   vr29<%r9d>, .L2
	mov_l    vr13, $0
	jmp      .L7
.L6:
	mov_l    vr11, $0
	jmp      .L9
.L8:
	localaddr vr16<%r9>, $0
	sconv_lq vr17<%r8>, vr11
	mul_q    vr18<%rcx>, vr17<%r8>, $4000
	add_q    vr19<%rdx>, vr16<%r9>, vr18<%rcx>
	sconv_lq vr20<%rsi>, vr13
	mul_q    vr21<%r8>, vr20<%rsi>, $8
	add_q    vr22<%r9>, vr19<%rdx>, vr21<%r8>
	mov_q    vr23<%rcx>, (vr22<%r9>)
	mov_q    vr14, vr23<%rcx>
	mov_l    vr12, $0
	jmp      .L11
.L10:
	localaddr vr16<%r9>, $4000000
	sconv_lq vr17<%r8>, vr11
	mul_q    vr18<%rcx>, vr17<%r8>, $4000
	add_q    vr19<%rdx>, vr16<%r9>, vr18<%rcx>
	sconv_lq vr20<%rsi>, vr12
	mul_q    vr21<%r8>, vr20<%rsi>, $8
	add_q    vr22<%r9>, vr19<%rdx>, vr21<%r8>
	mov_q    vr23<%rcx>, (vr22<%r9>)
	localaddr vr24<%rsi>, $2000000
	sconv_lq vr25<%rdx>, vr13
	spill_q  vr22<%r9>, $0
	mul_q    vr26<%r9>, vr25<%rdx>, $4000
	add_q    vr27<%rdx>, vr24<%rsi>, vr26<%r9>
	add_q    vr30<%rsi>, vr27<%rdx>, vr21<%r8>
	mov_q    vr32<%r9>, (vr30<%rsi>)
	mul_q    vr31<%r8>, vr14, vr32<%r9>
	add_q    vr33<%rdx>, vr23<%rcx>, vr31<%r8>
	restore_q vr22<%rsi>, $0
	mov_q    (vr22<%rsi>), vr33<%rdx>
	add_l    vr42<%r9d>, vr12, $1
	mov_l    vr12, vr42<%r9d>
.L11:
	cmplt_l  vr43<%r9d>, vr12, vr10
	cjmp_t   vr43<%r9d>, .L10
	add_l    vr45<%r9d>, vr11, $1
	mov_l    vr11, vr45<%r9d>
.L9:
	cmplt_l  vr46<%r9d>, vr11, vr10
	cjmp_t   vr46<%r9d>, .L8
	add_l    vr48<%r9d>, vr13, $1
	mov_l    vr13, vr48<%r9d>
.L7:
	cmplt_l  vr49<%r9d>, vr13, vr10
	cjmp_t   vr49<%r9d>, .L6
	mov_l    vr11, $0
	jmp      .L13
.L12:
	mov_l    vr12, $0
	jmp      .L15
.L14:
	localaddr vr16<%r9>, $4000000
	sconv_lq vr17<%r8>, vr11
	mul_q    vr18<%rcx>, vr17<%r8>, $4000
	add_q    vr19<%rdx>, vr16<%r9>, vr18<%rcx>
	sconv_lq vr20<%rsi>, vr12
	mul_q    vr21<%r8>, vr20<%rsi>, $8
	add_q    vr22<%r9>, vr19<%rdx>, vr21<%r8>
	mov_q    vr1, (vr22<%r9>)
	call     print_i64
	call     print_nl
	add_l    vr24<%r9d>, vr12, $1
	mov_l    vr12, vr24<%r9d>
.L15:
	cmplt_l  vr25<%r9d>, vr12, vr10
	cjmp_t   vr25<%r9d>, .L14
	add_l    vr27<%r9d>, vr11, $1
	mov_l    vr11, vr27<%r9d>
.L13:
	cmplt_l  vr28<%r9d>, vr11, vr10
	cjmp_t   vr28<%r9d>, .L12
	mov_l    vr0, $0
	jmp      .Lmain_return
.Lmain_return:
	leave    $6000000
	ret      
